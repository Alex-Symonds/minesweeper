@use 'variables.scss' as v;

@font-face{
    font-family: "Play";
    src: url("../fonts/Play-Regular.ttf");
    font-size: 16px;
    font-style: normal;
    font-weight: 400;
    font-display: swap;
}
@font-face{
    font-family: "Play";
    src: url("../fonts/Play-Bold.ttf");
    font-size: 16px;
    font-style: bold;
    font-weight: 700;
}

body{
    --main-font-list: Play, Verdana, sans-serif;
    color: v.$c_text;
    font-family: var(--main-font-list);
    background: v.$c_bg_main;
    background:linear-gradient(90deg, v.$c_bg_main 0%, v.$c_bg_main_inner 50%, v.$c_bg_main 100%);
    margin: 0;
}

h1{
    display: inline-block;
    font-size: 2.4rem;
    margin: 1.5rem 0 1rem;
    padding: 0.3rem 3rem;
    border-style: solid;
    border-color: v.$c_h1_border;
    border-width: 1px 0;
    background: v.$g_h1_bg;
    color: v.$c_h1;

    max-width: 100vw;
}

.root{
    display: flex;
    flex-direction: column;
    align-items: center;
    
    width: 100%;
}

.minesweeper{
    display: flex;
    flex-direction: column;
    align-items: center;

    width: min-content;
    max-width: 100%;
}

.panel{
    width: calc(100% - 1rem);
    margin: 1.5rem 0.5rem;
    padding: 0.6rem 1rem;
    box-sizing: border-box;

    border: 1px solid v.$c_panel_border;
    border-radius: 0.3rem;
    background: v.$c_panel_bg;
    background: linear-gradient(90deg, v.$c_panel_bg 0%, v.$c_panel_bg_inner 50%, v.$c_panel_bg 100%);
    box-shadow: 0 0 0.6rem 0.2rem rgba(0, 88, 189, 0.05);

    position: relative;
    h2{
        display: block;

        font-size: 1rem;
        font-weight: normal;
        margin: 0;

        position: absolute;
        top: -0.7rem;
        left: 0.5rem;
        height: 1.4rem;

        padding: 0.1rem 0.5rem;

        font-weight: bold;
        
        color: v.$c_text_emphasis;
        background: linear-gradient(transparent calc(50% - 3px), 
                                    v.$c_panel_bg calc(50% - 3px), 
                                    v.$c_panel_bg calc(50% - 1px), 
                                    transparent calc(50% - 1px));
    }
    &.menu h2{
        background: linear-gradient(transparent 0%, 
                                    v.$c_panel_bg calc(50% - 4px), 
                                    v.$c_panel_bg calc(50% - 1px), 
                                    transparent calc(50% - 1px));
    }
}

.progress{
    
    p{
        display: flex;
        justify-content: space-between;
        width: 100%;
    }

    .value{
        color: v.$c_text_emphasis;
        border-bottom: 1px solid transparent;

        &.error{
            font-style: italic;
            border-bottom: 1px dotted v.$c_lightest;
        }
    }
}

.controls{
    display: flex;
    align-items: flex-end;
    justify-content: space-between;
    // padding: 0.3rem 0;

    margin: 1.1rem 0 0;
    padding: 0.6rem 0 0.3rem;
    border-top: 1px solid v.$c_text_subtle;
}

.labelledToggle{
    display: flex;
    flex-direction: column;
    align-items: center;
    gap: 0.3rem;
}

button.btn{
    font-family: var(--main-font-list);
    font-size: 1rem;
    line-height: 1rem;
    padding: 0.3rem 1rem;

    color: v.$c_panel_border;

    background: transparent;
    border: 1px solid v.$c_panel_border;
    border-radius: 0.3rem;

    &:hover{
        color: v.$c_button_hover_text;
        border-color: v.$c_text;
        background: v.$c_button_hover_bg;
    }
}

button.toggle{
    display: flex;
    align-items: stretch;
    padding: 0;

    font-family: var(--main-font-list);
    font-size: 1rem;

    color: v.$c_panel_border;

    background: transparent;
    border: 1px solid v.$c_panel_border;
    border-radius: 0.3rem;

    overflow: hidden;
    span{
        padding: 0.2rem 0.5rem;
    }
    .toggleActive{
        color: v.$c_text_emphasis;
    }
    .toggleInactive{
        color: v.$c_text_subtle;
    }
    &:hover,
    &:focus{
        .toggleInactive{
            color: v.$c_button_hover_text;
            border-color: v.$c_text;
            background: v.$c_button_hover_bg;
        }
    }
}


.keyboardStartGame{
    position: absolute;
    top: 0.3rem;
    right: 0;

    background: url(../images/keyboard.svg) transparent;
    background-size: contain;
    background-repeat: no-repeat;
    width: 2.55rem;
    height: 1.2rem;
    border: none;

    margin: 0.2rem;

    span{
        position: absolute;
        top: 0;
        left: 0;
        color: transparent;

        height: 100%;
        width: 100%;

        font-size: 0.1rem;
    }
}



.result{
    text-align: center;

    h3{
        font-size: 1.6rem;
        margin: 0.7rem 0 0;
        padding: 0.3rem 0;
        color: v.$c_text_emphasis;
    }

    p{
        margin: 0.1rem 0 1rem;
        padding: 0;
    }

    .close{
        font-weight: bold;
    }

}

.boardContainer{
    display: flex;
    flex-direction: column;
    align-items: center;
}


.board{
    display: flex;
    flex-direction: column;
    width: max-content;

    margin: 1.7rem 0.5rem 1rem;
    box-shadow: 0 0 0.4rem 0.05rem rgba(0,0,0, 0.2);

    background: v.$c_bg_main;

    --tile-size: 2rem;
}

.board-row{
    display: flex;
}

.tile{
    display: flex;
    align-items: center;
    justify-content: center;
    border: 1px solid v.$c_panel_border;
    width: var(--tile-size);
    aspect-ratio: 1 / 1;
}

.hidden{
    background: v.$c_tile_bg_hidden;
}

.empty{
    background: transparent;
}

.menuActive,
.tile:focus{
    &:after{
        display: block;
        content: '';
        position: absolute;
        z-index: 2;
        width: calc(var(--tile-size) + 4px);
        aspect-ratio: 1 / 1;
        border: 2px solid v.$c_text_emphasis;
        box-sizing: border-box;
    }
}

.mine{
    background: url(../images/skull-green.svg) v.$c_tile_bg_mine;
    background-repeat: no-repeat;
    background-size: 80%;
    background-position: center;
}
.mine.exploded{
    background-color: v.$c_tile_bg_mine_emphasis;
    position: relative;
    &:before{
        display: block;
        content: '';
        position: absolute;
        width: calc(var(--tile-size) + 4px);
        aspect-ratio: 1 / 1;
        border: 2px solid v.$c_tile_border_mine_emphasis;
        box-sizing: border-box;
    }
}

.flag{
    &:before{
        content: '';
        background: url(../images/shield-white.svg) transparent;
        background-size: 80%;
        background-repeat: no-repeat;
        background-position: center;
        display: block;
        width: 100%;
        aspect-ratio: 1 / 1;
    }

    &.wrong{
        &:before{
            background: url(../images/shield-wrong.svg) v.$c_tile_bg_number;
            background-size: 80%;
            background-repeat: no-repeat;
            background-position: center;
        }
    }
}

.number{
    background: v.$c_tile_bg_number;
    font-weight: bold;
    font-size: 1.2rem;
}
.adj1{
    color: rgb(0, 236, 0);
}
.adj2{
    color: rgb(0, 217, 255);
}
.adj3{
    color: rgb(209, 109, 255);
}
.adj4{
    color: orange;
}
.adj5{
    color: rgb(252, 0, 155);
}
.adj6{
    color: rgb(0, 255, 213);
}
.adj7{
    color: yellow;
}
.adj8{
    color: red;
}


.close{
    align-self: flex-end;
    position: absolute;
    top: 0.3rem;
    right: 0.3rem;

    font-size: 1rem;

    color: v.$c_text;
    background: transparent;
    border: none;

    &:hover{
        color: v.$c_text_emphasis;
    }
}

.menu{
    position: absolute;
    z-index: 3;

    display: flex;
    flex-direction: column;
    gap: 1.5rem;
    padding: 2.5rem 1rem 1.5rem;

    // Note: .menu has JS code to position it relative to tap location. 
    // If width is set to anything >50%, it'll break the code which
    // prevents the menu from being positioned "too far right". 
    // Result = it's possible for the close button to be "off screen".
    width: 50%;

    box-shadow: 0 0 1rem 0.2rem rgba(black, 0.2);

    .btn{
        height: 3rem;
    }
}

button.btn.toggleFlag{
    position: relative;
    &:before,
    &:after{
        display: block;
        content: '';
        width: 100%;
        height: 100%;
        position: absolute;
        top:0;
        left:0;
        background-image: url(../images/shield-white.svg);
        background-repeat: no-repeat;
        background-size: 1.5rem;
    }
    &:before{
        background-position: 0.3rem center;
    }
    &:after{
        background-position: calc(100% - 0.3rem) center;
    }
}

.overlayWrapper{
    position: absolute;
    z-index: 4;

    border-style: solid;
    border-color: rgba(v.$c_text,0.7);
    border-width: 1px 0;
    box-shadow: 0 0 1rem 0.2rem rgba(v.$c_text,0.5);

    width:  100%;
    height: fit-content;
    display:  flex;
    justify-content: center;
    background: #002802;
    box-sizing: border-box;

    .panel{
       width: 28rem;
       max-width: calc(100% - 1rem);
       box-shadow: 0 0 1rem 0.2rem rgba(black,0.3);
    }
}

@media screen and (max-width: 407px) {
    .board{
        --tile-size: 1.6rem;
    }
}
